redis.cn中文网站可以进行自学
yum install nc
可以连接redis客户端 nc localhost 6379
可以直接通过管道发送命令 
echo -e 'set k1 99/n incrn k1/n get k1' |nc localhost 6379
redis有大量加载数据 也就是冷加载 但是需要先安装一个格式化的插件因为win中是/r/n是换行  linux是/n
cat 1.txt | redis-cli -pipe
pubsub
布隆过滤器 modules 
概率解决问题
不可能百分百阻挡 可以降低恶意请求 降低到《1%》
1.你有啥
2.有的向bitmap中标记
3.请求的可能被误标记
4,。但是，一定概率会大量减少放行，穿透
5.而且，成本低
布隆过滤器 1.穿透了，但是数据库却不存在----client，增加redis中的key，value标记她不存在，下次其他客户端访问的时候就直接名字这个key了，不走布隆
过滤器了，直接返回value，就知道了这个key不存在，也就不用走布隆了，客户端直接可以处理了
  2.数据库增加了元素----必须要完成元素对布隆的添加  （这里就出现双写了）
  布隆过滤器就是为了除了缓存穿透的问题也就是防止别人恶意攻击，发送我redis中没有缓存的key，然后大量的去数据库查询，增加数据库的压力

redis作为数据库/缓存的区别
缓存数据其实“不重要”   缓存不是全量数据  缓存应该随着访问变化---热数据
redis作为缓存-------redis里的数据怎么能随着业务的变化，只保留热数据，因为内存是有限的，也就是瓶颈

redis_6379.conf中的maxmemory 可以设置内存大小一般在1-10G
maxmemory 设置的大小到达之后会根据 maxmemory-policy 配置的指令进行配置
lru多久没有使用它（时间维度） lfu使用了多少次（次数维度）
在缓存使用中一般使用all所有key和设置了有限时间的key的lre方式

设置key有效期
set k1 aaa ex 20 20s之后过期
expire k1 50 定时，但是发生写的时候会剔除过期时间
expireat k1 时间戳 倒计时且，redis不能延长
1.过期时间不会随着你访问"查询"key而重新设置，他会一直进行减少
2.如果发生了"写"，会剔除过去时间
3.业务逻辑自己补全，更新之后需要自己再次设置过期时间

过期判定原理
1.被动访问时判定
2，周期轮询判定  增量的
目的，稍微牺牲下内存，但是保住了reids的性能为王！！！
可以在reids.cn/command/expire.html查看
